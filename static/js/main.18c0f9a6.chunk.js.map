{"version":3,"sources":["components/Layout/Layout.js","components/SearchBar/SearchBar.js","components/Hero/Hero.js","components/Business/Business.js","components/BusinessList/BusinessList.js","util/Yelp.js","components/BusinessLocationMap/BusinessLocationMap.js","pages/Details.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Layout","props","className","children","SearchBar","searchYelp","color","useState","term","setTerm","location","setLocation","value","placeholder","onChange","e","target","onClick","alert","Provider","size","Hero","Business","business","to","id","src","imageSrc","alt","name","editing","starColor","starCount","rating","reviewCount","category","address","BusinessList","businesses","console","log","JSON","stringify","length","map","key","Yelp","search","fetch","headers","Authorization","process","then","response","json","jsonResponse","image_url","address1","city","state","zipCode","zip_code","categories","title","review_count","containerStyle","width","marginLeft","border","borderRadius","options","disableDefaultUI","zoomControl","React","memo","lat","lng","googleMapsApiKey","style","height","display","flexFlow","justifyContent","padding","mapContainerStyle","center","zoom","useStaticMap","position","Details","match","useEffect","fetchBusiness","setBusiness","loading","setLoading","a","params","display_address","price","display_phone","coordinates","latitude","longitude","history","createHashHistory","App","setBusinesses","businessesList","basename","path","exact","render","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"uNAMeA,G,MAJA,SAACC,GACd,OAAO,yBAAKC,UAAU,UAAUD,EAAME,Y,eCwCzBC,EAvCG,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,WAAwB,KAAZC,MACPC,mBAAS,KADU,mBACpCC,EADoC,KAC9BC,EAD8B,OAEXF,mBAAS,IAFE,mBAEpCG,EAFoC,KAE1BC,EAF0B,KAY3C,OACE,yBAAKT,UAAU,cACb,yBAAKA,UAAU,sBACb,2BACEA,UAAU,gDACVU,MAAOJ,EACPK,YAAY,uBACZC,SAAU,SAACC,GAAD,OAAON,EAAQM,EAAEC,OAAOJ,UAEpC,2BACEV,UAAU,oBACVU,MAAOF,EACPG,YAAY,UACZC,SAAU,SAACC,GAAD,OAAOJ,EAAYI,EAAEC,OAAOJ,WAG1C,4BAAQV,UAAU,qBAAqBe,QAxB3C,WACe,KAATT,GAA4B,KAAbE,EACjBQ,MAAM,4DAENb,EAAWG,EAAME,KAqBf,kBAAC,IAAYS,SAAb,CAAsBP,MAAO,CAAEN,MAAO,QAASc,KAAM,UACnD,6BACE,kBAAC,IAAD,WC7BGC,EAJF,SAACpB,GACZ,OAAO,4BAAQC,UAAU,QAAQD,EAAME,W,wBCkC1BmB,EAjCE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,kBAAC,IAAD,CAAMC,GAAE,kBAAaD,EAASE,KAC5B,yBAAKvB,UAAU,YACb,yBAAKA,UAAU,6BACb,yBAAKwB,IAAKH,EAASI,SAAUC,IAAI,kCAGnC,yBAAK1B,UAAU,yBACb,uBAAGA,UAAU,oBAAoBqB,EAASM,MAE1C,yBAAK3B,UAAU,oBACb,kBAAC,IAAD,CACE2B,KAAK,QACLC,SAAS,EACTC,UAAW,UACXC,UAAW,EACXpB,MAAOW,EAASU,SAElB,uBAAG/B,UAAU,0BACVqB,EAASW,YADZ,YAIF,2BAAIX,EAASY,UACb,yBAAKjC,UAAU,qBACb,uBAAGA,UAAU,0BAA0BqB,EAASa,cCH7CC,EAvBM,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAGtB,OAFAC,QAAQC,IAAIC,KAAKC,UAAUJ,EAAY,KAAM,IAEnB,IAAtBA,EAAWK,OAEX,yBAAKzC,UAAU,6BACb,0CAMJ,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,yBAAd,wBACA,yBAAKA,UAAU,iBACZoC,EAAWM,KAAI,SAACrB,GACf,OAAO,kBAAC,EAAD,CAAUA,SAAUA,EAAUsB,IAAKtB,EAASE,WCe9CqB,EAlCF,CACXC,OADW,SACJvC,EAAME,GACX,OAAOsC,MAAM,sFAAD,OAC4ExC,EAD5E,qBAC6FE,EAD7F,oCAEV,CACEuC,QAAS,CACPC,cAAc,UAAD,OAAYC,uIAI5BC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,GAAIA,EAAajB,WACf,OAAOiB,EAAajB,WAAWM,KAAI,SAACrB,GAClC,MAAO,CACLE,GAAIF,EAASE,GACbE,SAAUJ,EAASiC,UACnB3B,KAAMN,EAASM,KACfO,QAASb,EAASb,SAAS+C,SAC3BC,KAAMnC,EAASb,SAASgD,KACxBC,MAAOpC,EAASb,SAASiD,MACzBC,QAASrC,EAASb,SAASmD,SAC3B1B,SAAUZ,EAASuC,WAAW,GAAGC,MACjC9B,OAAQV,EAASU,OACjBC,YAAaX,EAASyC,sB,yDCvB9BC,EAAiB,CACrBC,MAAO,OACPC,WAAY,EACZC,OAAQ,oBACRC,aAAc,SAGVC,EAAU,CACdC,kBAAkB,EAClBC,aAAa,GAkCAC,UAAMC,MA/BrB,YAA4C,IAAbC,EAAY,EAAZA,IAAKC,EAAO,EAAPA,IAClC,OACE,kBAAC,IAAD,CAAYC,iBAAkB1B,2CAC5B,yBACE2B,MAAO,CACLC,OAAQ,IACRb,MAAO,OACPc,QAAS,OACTC,SAAU,aACVC,eAAgB,SAChBC,QAAS,IAGX,kBAAC,IAAD,CACEC,kBAAmBnB,EACnBoB,OAAQ,CACNV,MACAC,OAEFU,KAAM,GACNC,cAAc,EACdjB,QAASA,GAER,kBAAC,IAAD,CAAQkB,SAAU,CAAEb,MAAKC,SAC1B,2CC3BK,SAASa,EAAT,GAAwC,EAArBpF,WAAsB,IAAVqF,EAAS,EAATA,MAC5CC,qBAAU,WACRC,MACC,IAHkD,MAKrBrF,mBAAS,IALY,mBAK9CgB,EAL8C,KAKpCsE,EALoC,OAMvBtF,oBAAS,GANc,mBAM9CuF,EAN8C,KAMrCC,EANqC,KAS/CH,EAAa,uCAAG,8BAAAI,EAAA,sEACQhD,MAAM,0EAAD,OAC2C0C,EAAMO,OAAOxE,GADxD,iBAE/B,CACEwB,QAAS,CACPC,cAAc,UAAD,OAAYC,uIALX,cACdyC,EADc,gBASGA,EAActC,OATjB,OASd/B,EATc,OAUpBsE,EAAYtE,GAEZwE,GAAW,GACXxD,QAAQC,IAAIC,KAAKC,UAAUnB,EAAU,KAAM,IAbvB,2CAAH,qDAgBnB,OAAIuE,EACK,yBAAK5F,UAAU,oBAAf,oBAGP,yBAAKA,UAAU,WACb,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAAMsB,GAAG,KACP,uBAAGtB,UAAU,iBAAb,cAEF,kBAAC,IAAYiB,SAAb,CAAsBP,MAAO,CAAEQ,KAAM,UACnC,6BACE,kBAAC,IAAD,CAAMI,GAAG,KACP,kBAAC,IAAD,UAKR,yBAAKtB,UAAU,4BACZqB,EAASiC,UACR,yBAAK9B,IAAKH,EAASiC,UAAW5B,IAAI,iCAElC,6EAGJ,yBAAK1B,UAAU,0BACb,yBAAKA,UAAU,4BACb,4BAAKqB,EAASM,OAEhB,yBAAK3B,UAAU,2BACb,yBAAKA,UAAU,oBACb,2BACE,kBAAC,IAAD,MACA,wCACCqB,EAASb,SAASwF,kBAGvB,yBAAKhG,UAAU,mBACb,2BACE,kBAAC,IAAD,MACA,iEACCqB,EAASyC,cAEZ,2BACE,kBAAC,IAAD,MACA,uCACA,kBAAC,IAAD,CACEnC,KAAK,QACLC,SAAS,EACTC,UAAW,UACXC,UAAW,EACXpB,MAAOW,EAASU,OAChB/B,UAAU,qBAIfqB,EAAS4E,MACR,yBAAKjG,UAAU,kBACb,2BACE,kBAAC,IAAD,MACA,wCACCqB,EAAS4E,QAGZ,KACH5E,EAAS6E,cACR,yBAAKlG,UAAU,kBACb,2BACE,kBAAC,IAAD,MACA,0CACCqB,EAAS6E,gBAGZ,KAEJ,yBAAKlG,UAAU,gBACb,kBAAC,EAAD,CACEyE,IAAKpD,EAAS8E,YAAYC,SAC1B1B,IAAKrD,EAAS8E,YAAYE,gB,kBCxGpCC,EAAUC,cA6CCC,MA3Cf,WAAgB,IAAD,EACuBnG,mBAAS,IADhC,mBACN+B,EADM,KACMqE,EADN,OAEiBpG,oBAAS,GAF1B,mBAENuF,EAFM,KAEGC,EAFH,KAIb,SAAS1F,EAAWG,EAAME,GACxBqF,GAAW,GACXjD,EAAKC,OAAOvC,EAAME,GAAU0C,MAAK,SAACwD,GACF,IAA1BA,EAAejE,QACjBzB,MAAM,iFAERyF,EAAcC,GACdb,GAAW,MAIf,OACE,kBAAC,IAAD,CAAQc,SAAQ,UAAK1D,YAAL,MAAiCqD,QAASA,GACxD,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAW1G,WAAYA,EAAYC,MAAM,SAE1CwF,EACC,yBAAK5F,UAAU,0BACb,iDAGF,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAcoC,WAAYA,MAIhC,kBAAC,IAAD,CACEwE,KAAK,eACLE,OAAQ,SAAC/G,GAAD,OAAW,kBAACwF,EAAD,iBAAaxF,EAAb,CAAoBI,WAAYA,YCnC3C4G,QACW,cAA7BC,OAAOxG,SAASyG,UAEe,UAA7BD,OAAOxG,SAASyG,UAEhBD,OAAOxG,SAASyG,SAASzB,MACvB,2DCbN0B,IAASJ,OACP,kBAAC,IAAMK,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtE,MAAK,SAAAuE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvF,QAAQuF,MAAMA,EAAMC,c","file":"static/js/main.18c0f9a6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Layout = (props) => {\r\n  return <div className=\"layout\">{props.children}</div>;\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState } from \"react\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaSearchLocation } from \"react-icons/fa\";\r\n\r\nconst SearchBar = ({ searchYelp, color }) => {\r\n  const [term, setTerm] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n\r\n  function onSubmitHandler() {\r\n    if (term === \"\" || location === \"\") {\r\n      alert(\"Arama yapmadan önce gerekli alanları doldurunuz.\");\r\n    } else {\r\n      searchYelp(term, location);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <div className=\"search-bar__fields\">\r\n        <input\r\n          className=\"search-bar__input search-bar__input--business\"\r\n          value={term}\r\n          placeholder=\"Ne Arıyorsunuz?\"\r\n          onChange={(e) => setTerm(e.target.value)}\r\n        />\r\n        <input\r\n          className=\"search-bar__input\"\r\n          value={location}\r\n          placeholder=\"Nerede?\"\r\n          onChange={(e) => setLocation(e.target.value)}\r\n        />\r\n      </div>\r\n      <button className=\"search-bar__submit\" onClick={onSubmitHandler}>\r\n        <IconContext.Provider value={{ color: \"white\", size: \"1.5em\" }}>\r\n          <div>\r\n            <FaSearchLocation />\r\n          </div>\r\n        </IconContext.Provider>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nconst Hero = (props) => {\r\n  return <header className=\"hero\">{props.children}</header>;\r\n};\r\n\r\nexport default Hero;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\n\r\nconst Business = ({ business }) => {\r\n  return (\r\n    <Link to={`details/${business.id}`}>\r\n      <div className=\"business\">\r\n        <div className=\"business__image-container\">\r\n          <img src={business.imageSrc} alt=\"İşletme Görseli\" />\r\n        </div>\r\n\r\n        <div className=\"business__information\">\r\n          <p className=\"business__header\">{business.name}</p>\r\n\r\n          <div className=\"business__review\">\r\n            <StarRatingComponent\r\n              name=\"rate2\"\r\n              editing={false}\r\n              starColor={\"#0b8457\"}\r\n              starCount={5}\r\n              value={business.rating}\r\n            />\r\n            <p className=\"business__review-count\">\r\n              {business.reviewCount} Oylama\r\n            </p>\r\n          </div>\r\n          <p>{business.category}</p>\r\n          <div className=\"business__address\">\r\n            <p className=\"business__address-text\">{business.address}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Business;\r\n","import React from \"react\";\r\nimport Business from \"../Business/Business\";\r\n\r\nconst BusinessList = ({ businesses }) => {\r\n  console.log(JSON.stringify(businesses, null, 2));\r\n\r\n  if (businesses.length === 0) {\r\n    return (\r\n      <div className=\"business-list__pre-search\">\r\n        <h2>Bul Bana!</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"business-list__container\">\r\n      <h2 className=\"business-list__header\">İşletmeler</h2>\r\n      <div className=\"business-list\">\r\n        {businesses.map((business) => {\r\n          return <Business business={business} key={business.id} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BusinessList;\r\n","const Yelp = {\r\n  search(term, location) {\r\n    return fetch(\r\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=best_match&locale=tr_TR`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${process.env.REACT_APP_YELP_KEY}`,\r\n        },\r\n      }\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((jsonResponse) => {\r\n        if (jsonResponse.businesses) {\r\n          return jsonResponse.businesses.map((business) => {\r\n            return {\r\n              id: business.id,\r\n              imageSrc: business.image_url,\r\n              name: business.name,\r\n              address: business.location.address1,\r\n              city: business.location.city,\r\n              state: business.location.state,\r\n              zipCode: business.location.zip_code,\r\n              category: business.categories[0].title,\r\n              rating: business.rating,\r\n              reviewCount: business.review_count,\r\n            };\r\n          });\r\n        }\r\n      });\r\n  },\r\n};\r\n\r\nexport default Yelp;\r\n","import React from \"react\";\r\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  marginLeft: 0,\r\n  border: \"1px solid #00a79d\",\r\n  borderRadius: \"0.8em\",\r\n};\r\n\r\nconst options = {\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\n\r\nfunction BusinessLocationMap({ lat, lng }) {\r\n  return (\r\n    <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_KEY}>\r\n      <div\r\n        style={{\r\n          height: 350,\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexFlow: \"row nowrap\",\r\n          justifyContent: \"center\",\r\n          padding: 0,\r\n        }}\r\n      >\r\n        <GoogleMap\r\n          mapContainerStyle={containerStyle}\r\n          center={{\r\n            lat,\r\n            lng,\r\n          }}\r\n          zoom={16}\r\n          useStaticMap={true}\r\n          options={options}\r\n        >\r\n          {<Marker position={{ lat, lng }} />}\r\n          <></>\r\n        </GoogleMap>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\nexport default React.memo(BusinessLocationMap);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { MdLocationOn } from \"react-icons/md\";\r\nimport { MdRateReview } from \"react-icons/md\";\r\nimport { FaThumbsUp } from \"react-icons/fa\";\r\nimport { IoMdPricetags } from \"react-icons/io\";\r\nimport { AiFillPhone } from \"react-icons/ai\";\r\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\r\nimport BusinessLocationMap from \"../components/BusinessLocationMap/BusinessLocationMap\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\n\r\nexport default function Details({ searchYelp, match }) {\r\n  useEffect(() => {\r\n    fetchBusiness();\r\n  }, []);\r\n\r\n  const [business, setBusiness] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  //const [businessImages, setBusinessImages] = useState([]);\r\n\r\n  const fetchBusiness = async () => {\r\n    const fetchBusiness = await fetch(\r\n      `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${match.params.id}?locale=tr_TR`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${process.env.REACT_APP_YELP_KEY}`,\r\n        },\r\n      }\r\n    );\r\n    const business = await fetchBusiness.json();\r\n    setBusiness(business);\r\n    //setBusinessImages(business.photos);\r\n    setLoading(false);\r\n    console.log(JSON.stringify(business, null, 2));\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"details__loading\">Yükleniyor...</div>;\r\n  }\r\n  return (\r\n    <div className=\"details\">\r\n      <div className=\"details__navbar\">\r\n        <Link to=\"/\">\r\n          <p className=\"details__logo\">Bul Bana!</p>\r\n        </Link>\r\n        <IconContext.Provider value={{ size: \"1.5em\" }}>\r\n          <div>\r\n            <Link to=\"/\">\r\n              <IoMdArrowRoundBack />\r\n            </Link>\r\n          </div>\r\n        </IconContext.Provider>\r\n      </div>\r\n      <div className=\"details__photo-container\">\r\n        {business.image_url ? (\r\n          <img src={business.image_url} alt=\"İşletme Görseli\" />\r\n        ) : (\r\n          <p>İşletme Görseli Bulunamadı.</p>\r\n        )}\r\n      </div>\r\n      <div className=\"details__business-info\">\r\n        <div className=\"details__business-header\">\r\n          <h2>{business.name}</h2>\r\n        </div>\r\n        <div className=\"details__info-container\">\r\n          <div className=\"details__address\">\r\n            <p>\r\n              <MdLocationOn />\r\n              <span>Adres:</span>\r\n              {business.location.display_address}\r\n            </p>\r\n          </div>\r\n          <div className=\"details__rating\">\r\n            <p>\r\n              <MdRateReview />\r\n              <span>İnceleme Sayısı:</span>\r\n              {business.review_count}\r\n            </p>\r\n            <p>\r\n              <FaThumbsUp />\r\n              <span>Puan:</span>\r\n              <StarRatingComponent\r\n                name=\"rate2\"\r\n                editing={false}\r\n                starColor={\"#0b8457\"}\r\n                starCount={5}\r\n                value={business.rating}\r\n                className=\"details__stars\"\r\n              />\r\n            </p>\r\n          </div>\r\n          {business.price ? (\r\n            <div className=\"details__price\">\r\n              <p>\r\n                <IoMdPricetags />\r\n                <span>Fiyat:</span>\r\n                {business.price}\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n          {business.display_phone ? (\r\n            <div className=\"details__phone\">\r\n              <p>\r\n                <AiFillPhone />\r\n                <span>Telefon:</span>\r\n                {business.display_phone}\r\n              </p>\r\n            </div>\r\n          ) : null}\r\n\r\n          <div className=\"details__map\">\r\n            <BusinessLocationMap\r\n              lat={business.coordinates.latitude}\r\n              lng={business.coordinates.longitude}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"../../sass/main.scss\";\nimport Layout from \"../Layout/Layout\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Hero from \"../Hero/Hero\";\nimport BusinessList from \"../BusinessList/BusinessList\";\nimport Yelp from \"../../util/Yelp\";\nimport Details from \"../../pages/Details\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { createHashHistory } from \"history\";\nlet history = createHashHistory();\n\nfunction App() {\n  const [businesses, setBusinesses] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  function searchYelp(term, location) {\n    setLoading(true);\n    Yelp.search(term, location).then((businessesList) => {\n      if (businessesList.length === 0) {\n        alert(\"Aradığınız kriterlere uygun işletme bulunamadı.\");\n      }\n      setBusinesses(businessesList);\n      setLoading(false);\n    });\n  }\n\n  return (\n    <Router basename={`${process.env.PUBLIC_URL}/#`} history={history}>\n      <div>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Hero>\n              <SearchBar searchYelp={searchYelp} color=\"red\" />\n            </Hero>\n            {loading ? (\n              <div className=\"business-list__loading\">\n                <h2>Yükleniyor...</h2>\n              </div>\n            ) : (\n              <Layout>\n                <BusinessList businesses={businesses} />\n              </Layout>\n            )}\n          </Route>\n          <Route\n            path=\"/details/:id\"\n            render={(props) => <Details {...props} searchYelp={searchYelp} />}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}